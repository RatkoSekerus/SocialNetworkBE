# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index()
GET     /users                      controllers.UserController.users()
GET     /posts                      controllers.PostController.posts()
GET     /likes/:postID              controllers.LikeController.likes(postID:Long)
GET     /userDetails/:userID        controllers.UserController.userDetails(userID:Long)
GET     /friends                    controllers.FriendshipController.friendships()
GET     /friendshipsOfUser/:userID  controllers.FriendshipController.friendshipsOfUser(userID:Long)
GET     /noFriendships/:userID      controllers.FriendshipController.noFriendships(userID:Long)
GET     /friendsOfUser/:userID      controllers.UserController.friendsOfUser(userID:Long)
GET     /requestsForUser/:userID    controllers.UserController.requestsForUser(userID:Long)
GET     /noFriendsOfUser/:userID    controllers.UserController.noFriendsOfUser(userID:Long)

+ nocsrf
POST    /register                   controllers.UserController.addUser()
+ nocsrf
POST    /userID                     controllers.UserController.userID()
+ nocsrf
POST    /login                      controllers.UserController.login()
+ nocsrf
POST    /addPost                    controllers.PostController.addPost()
+ nocsrf
POST    /deletePost                 controllers.PostController.deletePost()
+ nocsrf
POST    /likePost                   controllers.LikeController.likePost()
+ nocsrf
POST    /dislikePost                controllers.LikeController.dislikePost()
+ nocsrf
POST    /sendFriendRequest          controllers.FriendshipController.sendFriendRequest()
+ nocsrf
POST    /acceptFriendRequest        controllers.FriendshipController.acceptFriendRequest()
+ nocsrf
POST    /rejectFriendRequest        controllers.FriendshipController.rejectFriendRequest()
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
